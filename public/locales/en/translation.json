{
  "npm": "NPM is a package manager for Node.js packages, or modules if you like. There are thousands of free packages to download and use on their site. The npm is installed on your computer when you install Node.js",
  "span": "The <span> tag is used to group inline-elements in a document. The <span> tag provides a way to add a hook to a part of a text or a part of a document.",
  "package": "A package in Node.js contains all the files you need for a module. Modules are JavaScript libraries you can include in your project.",
  "nodejs": "Node.js is an open source server framework. Node.js allows you to run JavaScript on the server. It runs single-threaded, non-blocking, asynchronously programming, which is very memory efficient.",
  "single page application": "A single-page application (SPA) is a web application or web site that interacts with the user by dynamically rewriting the current page rather than loading entire new pages from a server. This approach avoids interruption of the user experience between successive pages, making the application behave more like a desktop application. In an SPA, either all necessary code – HTML, JavaScript, and CSS – is retrieved with a single page load, or the appropriate resources are dynamically loaded and added to the page as necessary, usually in response to user actions. The page does not reload at any point in the process.",
  "closure": "In programming languages, closures are techniques for implementing lexically scoped name binding in languages with first-class functions. A closure is a record storing a function together with an environment: a mapping associating each free variable of the function (variables that are used locally, but defined in an enclosing scope) with the value or reference to which the name was bound when the closure was created. A closure—unlike a plain function—allows the function to access those captured variables through the closure's copies of their values or references, even when the function is invoked outside their scope. <br /><br />Example: The following program fragment defines a higher-order function startAt with a parameter x and a nested function incrementBy. The nested function incrementBy has access to x, because incrementBy is in the lexical scope of x, even though x is not local to incrementBy. The function startAt returns a closure containing a copy of the value of x or a copy of the reference to x from this invocation of startAt, and the function incrementBy, which adds the value of y to the value of x:<br /><br /> function startAt(x)<br />----function incrementBy(y)<br />--------return x + y<br />----return incrementBy<br /><br />variable closure1 = startAt(1);<br />variable closure2 = startAt(5);<br /><br />Note that, as startAt returns a function, the variables closure1 and closure2 are of function type. Invoking closure1(3) (Meaning y=3) will return 4, while invoking closure2(3) (Meaning y=3) will return 8. While closure1 and closure2 refer to the same function incrementBy, the associated environments differ, and invoking the closures will bind the name x to two distinct variables with different values in the two invocations, thus evaluating the function to different results.",
  "oocss": "Object oriented CSS is a CSS methodology which consists in finding « css objects », ie « visual patterns », so as to define reusable css classes. It is a design-first approach to web development: first spot visual patterns, then name then, rather than semantically naming your classes (instead of .last-articles-box you would have .links-box, instead of .comment-title: .tiny-title)",
  "legacy code": "Legacy code is source code that relates to a no-longer supported or manufactured operating system or other computer technology. The term was first used by computer scientist George Olivetti to describe code maintained by an administrator that did not develop the code.<br />The term can also mean code inserted into modern software for the purpose of maintaining an older or previously supported feature.<br />More recently, the software engineering community has developed other interpretations for the term legacy code. Among the most prevalent are source code inherited from someone else and source code inherited from an older version of the software.<br />Michael Feathers introduced a definition of legacy code as code without tests, which reflects the perspective of legacy code being difficult to work with in part due to a lack of automated regression tests.",
  "bem": "BEM is a naming methodology that implements the OOCSS methodology. It is a component-based approach to front-end web development. BEM stands for Block Element Modifier.<br /><br />-A block is a standalone entity that is meaningful on its own.<br />-An element is a part of a block that has no standalone meaning and is semantically tied to its block.<br />-A modifier is a flag on a block or element.<br /><br />You can use them to change appearance or behaviour. Using BEM brings modularity, reusability and structure to your CSS.",
  "build pipeline": "A modern build pipeline typically consists of:<br />- A package manager, such as Yarn or npm. It lets you take advantage of a vast ecosystem of third-party packages, and easily install or update them.<br />- A bundler, such as webpack or Browserify. It lets you write modular code and bundle it together into small packages to optimize load time.<br />- A compiler such as Babel. It lets you write modern JavaScript code that still works in older browsers.",
  "continuous delivery": "Continuous Delivery (CD) is a software strategy that enables organizations to deliver new features to users as fast and efficiently as possible. The core idea of CD is to create a repeatable, reliable and incrementally improving process for taking software from concept to customer. The goal of Continuous Delivery is to enable a constant flow of changes into production via an automated software production line. The Continuous Delivery pipeline is what makes it all happen. The pipeline breaks down the software delivery process into stages. Each stage is aimed at verifying the quality of new features from a different angle to validate the new functionality and prevent errors from affecting your users. The pipeline should provide feedback to the team and visibility into the flow of changes to everyone involved in delivering the new feature/s. There is no such thing as The Standard Pipeline, but a typical CD pipeline will include the following stages: build automation and continuous integration; test automation; and deployment automation.",
  "modules (nodejs)": "Consider modules to be the same as JavaScript libraries: a set of functions you want to include in your application. Node.js has a set of built-in modules which you can use without any further installation.<br /><br />Technically, a module is a separate unit of software or hardware. Typical characteristics of modular components include portability, which allows them to be used in a variety of systems, and interoperability, which allows them to function with the components of other systems.",
  "http": "The Hypertext Transfer Protocol (HTTP) is an application protocol for distributed, collaborative, and hypermedia information systems. HTTP is the foundation of data communication for the World Wide Web. Hypertext is structured text that uses logical links (hyperlinks) between nodes containing text. HTTP is the protocol to exchange or transfer hypertext.",
  "parsing": "Syntax analysis or syntactic analysis is the process of analysing a string of symbols, either in natural language or in computer languages, conforming to the rules of a formal grammar. The term has slightly different meanings in different branches of linguistics and computer science.<br /><br />Compilers must parse source code to be able to translate it into object code. Likewise, any application that processes complex commands must be able to parse the commands.<br />Parsing is often divided into lexical analysis and semantic parsing. Lexical analysis concentrates on dividing strings into components, called tokens, based on punctuationand other keys. Semantic parsing then attempts to determine the meaning of the string.<br /><br />Computer language : to parse, is where a string of commands – usually a program – is separated into more easily processed components, which are analyzed for correct syntax and then attached to tags that define each component. The computer can then process each program chunk and transform it into machine language.",
  "source code": "Program instructions in their original form. Initially, a programmer writes a program in a particular programming language. This form of the program is called the source program, or more generically, source code. To execute the program, however, the programmer must translate it into machine language, the language that the computer understands. The first step of this translation process is usually performed by a utility called a compiler. The compiler translates the source code into a form called object code. Sometimes the object code is the same as machine code; sometimes it needs to be translated into machine language by a utility called an assembler. Source code is the only format that is readable by humans",
  "object code": "The code produced by a compiler. Programmers write programs in a form called source code. The source code consists of instructions in a particular language. Computers, however, can only execute instructions written in a low-level language called machine language. To get from source code to machine language, the programs must be transformed by a compiler.",
  "heroku": "Heroku is a cloud platform as a service (PaaS) supporting several programming languages that is used as a web application deployment model.",
  "let": "let allows you to declare variables that are limited in scope to the block, statement, or expression on which it is used. This is unlike the var keyword, which defines a variable globally, or locally to an entire function regardless of block scope. Variables declared by let have as their scope the block in which they are defined, as well as in any contained sub-blocks. In this way, let works very much like var. The main difference is that the scope of a var variable is the entire enclosing function.",
  "const": "Constants are block-scoped, much like variables defined using the let statement. The value of a constant cannot change through re-assignment, and it can't be redeclared.",
  "arrow function": "An arrow function expression has a shorter syntax than a function expression and does not have its own this, arguments, super, or new.target. These function expressions are best suited for non-method functions, and they cannot be used as constructors.<br />Syntax: ([arguments]) => { statements }",
  "callback": "In computer programming, a callback is any executable code that is passed as an argument to other code, which is expected to call back (execute) the argument at a given time. This execution may be immediate as in a synchronous callback, or it might happen at a later time as in an asynchronous callback.",
  "dry": "In software engineering, don't repeat yourself (DRY) is a principle of software development aimed at reducing repetition of software patterns, replacing them with abstractions; and several copies of the same data, using data normalization to avoid redundancy. The DRY principle is stated as 'Every piece of knowledge must have a single, unambiguous, authoritative representation within a system'",
  "single responsibility principle": "The single responsibility principle is a computer programming principle that states that every module or class should have responsibility over a single part of the functionality provided by the software, and that responsibility should be entirely encapsulated by the class. All its services should be narrowly aligned with that responsibility. Robert C. Martin expresses the principle as, 'A class should have only one reason to change.'",
  "scalability": "Scalability is the capability of a system, network, or process to handle a growing amount of work, or its potential to be enlarged to accommodate that growth. Scaling: two types: horizontal (deploy more machines that run the server or algorithm) and vertical (upgrading the machine that runs the server or algorithm to a more powerful machine)",
  "single source of truth": "In information systems design and theory, single source of truth (SSOT), is the practice of structuring information models and associated schemata such that every data element is stored exactly once. Any possible linkages to this data element (possibly in other areas of the relational schema or even in distant federated databases) are by reference only. Because all other locations of the data just refer back to the primary 'source of truth' location, updates to the data element in the primary location propagate to the entire system without the possibility of a duplicate value somewhere being forgotten.",
  "url": "A Uniform Resource Locator (URL), colloquially termed a web address, is a reference to a web resource that specifies its location on a computer network and a mechanism for retrieving it. A URL is a specific type of Uniform Resource Identifier (URI), although many people use the two terms interchangeably.<br />URLs occur most commonly to reference web pages (http), but are also used for file transfer (ftp), email (mailto), database access (JDBC), and many other applications.<br />Most web browsers display the URL of a web page above the page in an address bar. A typical URL could have the form http://www.example.com/index.html, which indicates a protocol (http), a hostname (www.example.com), and a file name (index.html)",
  "uri": "In information technology, a Uniform Resource Identifier (URI) is a string of characters used to identify a resource. Such identification enables interaction with representations of the resource over a network, typically the World Wide Web, using specific protocols. Schemes specifying a concrete syntax and associated protocols define each URI.<br />The most common form of URI is the Uniform Resource Locator (URL), frequently referred to informally as a web address. More rarely seen in usage is the Uniform Resource Name (URN), which was designed to complement URLs by providing a mechanism for the identification of resources in particular namespaces.",
  "natural language processing": "Natural language processing (NLP) is a field of computer science, artificial intelligence concerned with the interactions between computers and human (natural) languages, and, in particular, concerned with programming computers to fruitfully process large natural language data. Challenges in natural language processing frequently involve speech recognition, natural language understanding, and natural language generation.",
  "lint": "In computer programming, lint is historically a Unix utility that flags some suspicious and non-portable constructs (likely to be bugs) in C language source code. Generically, lint or a linter is any tool that detects and flags errors in programming languages, including stylistic errors. The term lint-like behavior is sometimes applied to the process of flagging suspicious language usage. Lint-like tools generally perform static analysis of source code.",
  "progressive web app": "Progressive Web App (PWA) are web applications that are regular web pages or websites, but can appear to the user like traditional applications or native mobile applications. The application type attempts to combine features offered by most modern browsers with the benefits of mobile experience.",
  "service worker": "A service worker is a script that your browser runs in the background, separate from a web page, opening the door to features that don't need a web page or user interaction (rich offline experiences, periodic background syncs, push notifications—functionality that would normally require a native application). It's essentially a JavaScript file that runs separately from the main browser thread, intercepting network requests, caching or retrieving resources from the cache, and delivering push messages (receive /deliver push messages from a server when the app is not active, which lets your app show push notifications to the user, even when it is not open in the browser).",
  "web app manifest": "The web app manifest is a simple JSON file that gives you, the developer, the ability to control how your app appears to the user in areas where they would expect to see apps (for example, a mobile device's home screen), direct what the user can launch, and define its appearance at launch. Web app manifests provide the ability to save a site bookmark to a device's home screen.",
  "es6 import": "import A from './A'<br />It only works if A.js has the default export: export default 42. It doesn't matter what name you use when importing.<br /><br />But this is a named import called A:<br />import { A } from './A'<br />The name matters. There has to be export const A = 42 in A.js.<br /><br />A module can only have one default export, but as many named exports as you'd like. You can import them all together: import A, { myA, Something } from './A'",
  "higher order function": "In mathematics and computer science, a higher-order function (also functional, functional form or functor) is a function that does at least one of the following: - takes one or more functions as arguments (i.e., procedural parameters), - returns a function as its result. All other functions are first-order functions",
  "decorators": "In Python, decorators provide a very simple syntax for calling higher-order functions. A Python decorator is a function that takes another function, extending the behavior of the latter function without explicitly modifying it.",
  "webpack": "Webpack is a static module bundler for modern JavaScript applications. When webpack processes your application, it recursively builds a dependency graph that includes every module your application needs, then packages all of those modules into one or more bundles.<br /><br />Other def: Webpack is a build tool that puts all of your assets, including Javascript, images, fonts, and CSS, in a dependency graph. Webpack lets you use require() in your source code to point to local files, like images, and decide how they're processed in your final Javascript bundle, like replacing the path with a URL pointing to a CDN.",
  "bundling": "Bundling is the process of following imported files and merging them into a single file: a “bundle”. This bundle can then be included on a webpage to load an entire app at once. Webpack and Browserify are two renownn bundlers.",
  "code editor (text editor)": "A code editor is a text editor that provides useful features for writing code, such as standardized colors to display different parts of code. There are many plugins available for these editors, for example to format your HTML code.",
  "integrated development environment": "IDEs are tools that usually combine code editors, debuggers, and built-in tools for compiling and running applications.",
  "debugging": "Debuggers are programs that help you find bugs in your code while it’s running so you can remove them before you release an application or website into the world. With the debugger, you can set breakpoints on certain lines of your code, and then whenever that code is executed, the IDE will pause the running application and let you inspect the value of all the variables at that moment in time — in other words, the state of your application.",
  "deploying": "The process of putting a website / web app out on the web. Before deploying an application, you develop it on your computer, in a certain environment (development environment). There can be a lot of considerations to take into account when deploying an app (setting up the production environment).",
  "html": "Hypertext Markup Language (HTML) is the standard markup language for creating web pages and web applications. With Cascading Style Sheets(CSS) and JavaScript it forms a triad of cornerstone technologies for the World Wide Web.<br />Web browsers receive HTML documents from a web server or from local storage and render them into multimedia web pages.<br />HTML elements (such as div, p, form) are the building blocks of HTML pages. With HTML constructs, images and other objects, such as interactive forms, may be embedded into the rendered page. It provides a means to create structured documents by denoting structural semantics for text such as headings, paragraphs, lists, links, quotes and other items. HTML elements are delineated by tags, written using angle brackets.",
  "css (cascading style sheets)": "CSS is a style sheet language used for describing the presentation of a document written in a markup language. Along with HTML and JavaScript, CSS is a cornerstone technology used by most websites to create visually engaging webpages, user interfaces for web applications, and user interfaces for many mobile applications. You build the structure and elements of your web page with HTML, then apply 'styles' to it with CSS (colors, fonts, shadows, position on the page, height and width...)",
  "javascript": "JavaScript, or JS, is a programming language (technically, it's a high-level, dynamic, weakly typed, prototype-based, multi-paradigm, and interpreted programming language). Alongside HTML and CSS, JavaScript is one of the three core technologies of World Wide Web content production.<br />It is used to make webpages interactive and provide online programs, including video games. The majority of websites employ it, and all modern web browsers support it without the need for plug-ins by means of a built-in JavaScript engine",
  "php": "PHP is a server-side scripting language designed for web development but also used as a general-purpose programming language. PHP code may be embedded into HTML code, or it can be used in combination with various web template systems, web content management systems, and web frameworks.",
  "crud": "CRUD stands for Create, Read, Update and Delete. It is used to describe a certain type of application where the user (or administrators) can read entries (blog posts, jokes, definitions), update them, create new ones, and delete some. Creating a simple CRUD web application is a good exercise for newbie developers. Technically, CRUD are the four basic functions of 'persistent storage'",
  "bread": "A more precise acronym for the same idea as CRUD (create, read, update, delete): Browse, Read, Edit, Add, Delete. Read does indeed refer to both reading the list of entries to choose from, and the fact of reading the contents of one of such entries, therefore it is more correct to divide the Read part in CRUD into Browse (all entries) and Read (one of them).",
  "favicon": "A favicon (short for favorite icon), also known as a shortcut icon, website icon, tab icon, URL icon, or bookmark icon, is a file containing one or more small icons, associated with a particular website or web page. You can create such an icon and upload it to a website (or web page) by several means, and web browsers will then make use of it (typically, it's the icon in the adress bar and next to the page's name in the bookmarks bar.",
  "code splitting": "Bundling (merging all your code into a single file to load an entire app at once) is great, but as your app grows, your bundle will grow too. You need to keep an eye on the code you are including in your bundle so that you don’t accidentally make it so large that your app takes a long time to load.<br />To avoid winding up with a large bundle, it’s good to get ahead of the problem and start “splitting” your bundle. Code-Splitting is a feature supported by bundlers like Webpack and Browserify which can create multiple bundles that can be dynamically loaded at runtime.<br />Code-splitting your app can help you “lazy-load” just the things that are currently needed by the user, which can dramatically improve the performance of your app.<br />(If you are using create-react-app, this is already configured for you and you can start using it immediately.)",
  "accessibility": "Web accessibility (also referred to as a11y) is the design and creation of websites that can be used by everyone (meaning that people with disabilities can access the web). Accessibility support is necessary to allow assistive technology to interpret web pages.",
  "redux": "Redux is a predictable state container for JavaScript apps. It helps you write applications that behave consistently, run in different environments (client, server, and native), and are easy to test. On top of that, it provides a great developer experience.<br /><br />The idea: managing the state of apps is increasingly complex. With Redux you can enforce every change to be described as an action, which lets us have a clear understanding of what’s going on in the app. If something changed, we know why it changed. Actions are like breadcrumbs of what has happened. Finally, to tie state and actions together, we write a function called a reducer.<br /><br />Redux is built on three fundamental principles:<br />-single source of truth: the state of your whole application is stored in an object tree within a single store<br />-state is read-only: the state of your whole application is stored in an object tree within a single store<br />-changes are made with pure functions: to specify how the state tree is transformed by actions, you write pure reducers",
  "pure functions": "A pure function is a function which:<br />-given the same input, will always return the same output<br />-produces no side effect<br />Functions who attempt to change their own input are impure, ex:<br />function withdraw (account, money) {<br />----account.total -= amount;<br />}",
  "in-memory database": "In in-memory database (IMDB, also main memory database system or MMDB or memory resident database) is a database management system that primarily relies on main memory for computer data storage. It is contrasted with database management systems that employ a disk storage mechanism. In-memory databases are faster than disk-optimized databases because disk access is slower than memory access, the internal optimization algorithms are simpler and execute fewer CPU instructions. Accessing data in memory eliminates seek time when querying the data, which provides faster and more predictable performance than disk. Applications where response time is critical, such as those running telecommunications network equipment and mobile advertising networks, often use main-memory databases.",
  "i18n": "(18 stands for the number of letters between i and n in internationalization) In computing, internationalization and localization are means of adapting computer software to different languages, regional differences and technical requirements of a target locale. Ex: the process of transforming your views so that the text is in such or such language when the user clicks a button.",
  "universal javascript": "Universal JavaScript can be defined as an intersection of client-side and server-side applications (JS runs both on client-side and server-side). There was a bit of a fight over the name (isomorphic JS or universal JS? Universal won).",
  "server-side rendering": "As opposed to client-side rendering. Server-side rendering is the most common method for displaying information onto the screen. It works by converting HTML files in the server into usable information for the browser. Whenever you visit a website, your browser makes a request to the server that contains the contents of the website. Once the request is done processing, your browser gets back the fully rendered HTML and displays it on the screen. If you then decide to visit a different page on the website, your browser will once again make another request for the new information. This can be unnecessarily slow (no need to reload everything if just a few things change). On the bright side, it's great for SEO.",
  "client-side rendering": "As opposed to server-side rendering. Rendering content in the browser using JavaScript. Instead of getting all of the content from the HTML document itself, you are getting a bare-bones HTML document with a JavaScript file that will render the rest of the site using the browser. Much faster loading of new content because no subsequent request is made to the server. However, it's bad for SEO, and the application will not load until all of the Javascript is downloaded to the browser (that's especially a problem for slow internet connections)",
  "routing": "Routing is the process of mapping URLs to code, ie taking a URI endpoint (that part of the URI which comes after the base URL) and decomposing it into parameters to determine which module, controller, and action of that controller should receive the request. <br />So, when a server receives a HTTP request, the router is the code responsible for: taking in the URI endpoint, check if it matches any of the registered routes for the application, and determine which part of the code should receive and treat the request.",
  "caching": "In computing, a cache is a hardware or software component that stores data so future requests for that data can be served faster; the data stored in a cache might be the result of an earlier computation, or the duplicate of data stored elsewhere. A cache hit occurs when the requested data can be found in a cache, while a cache miss occurs when it cannot. Cache hits are served by reading data from the cache, which is faster than recomputing a result or reading from a slower data store; thus, the more requests can be served from the cache, the faster the system performs.<br /><br />A cache is a temporary storage area. For example, the files you automatically request by looking at a Web page are stored on your hard disk in a cache subdirectory under the directory for your browser. When you return to a page you've recently looked at, the browser can get those files from the cache rather than the original server, saving you time and saving the network the burden of additional traffic.",
  "scraping": "Scraping (also known as Webscraping, Screenscraping, web data mining, web harvesting, or web data extraction), is the action of plucking data out of your website, by scrapers, which are scripts that analyse your website to extract specific information. You should try to hinder them, especially for information such as corporate emails (lest they get spammed)",
  "lazy loading": "Lazy, or 'on demand', loading is a great way to optimize your site or application. This practice essentially involves splitting your code at logical breakpoints, and then loading it once the user has done something that requires, or will require, a new block of code. This speeds up the initial load of the application and lightens its overall weight as some blocks may never even be loaded.",
  "resolving": "Resolving a name typically involves querying some repository that associates names with information that cannot be predicted without the repository. Resolving packages dependencies usually requires installing the missing packages - it isn't enough to know the names of the missing components, you have to actually acquire their contents, and the contents are not predictable from the name alone.<br /><br />Therefore you shouldn't use the term 'resolving' for something that is a mere context-free data transformation. Reserve it for situations where a substantial amount of information is symbolized by each name, so much that the only reasonable arrangement is to have a central registry for it.",
  "git": "As git-scm.com puts it, Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.<br />Ie it is a software that you use to manage code projects: keep track of changes in files, work on different ‘branches’ that you can ‘merge’ into the ‘master’ branch once/if you’re happy with them, allowing you to make mistakes, discard changes and go back to earlier versions of your code, test different things in separate branches… It works hand in hand with the command line, and Github (or some other hosting service for version control using git).<br /><br /><span className='bold'>Git workflow</span>:<br /><br /><span className='bold'>> working on a personal project:</span><br />-create a repository on github<br />-clone it on your computer in the folder you want it to be : git clone address_of_repo<br />(-you can also first initiate a git repository on your computer and push it to Github later: git init name)<br />-create a branch and switch to it: git checkout –b name_of_branch (useful: git branch to see all branches and the one you are currently on)<br />-work on your code<br />-when you’re happy with some bit of code: git add name_of_file1 name_of_file2 etc (useful: git status to see which, among the files you’ve changed, are or are not added yet (‘staged for commit’)<br />-when you’re sure about these changes and have added what you wish to: git commit –m ‘thoughtful commit message to help you keep track of your work’<br />-repeat this ‘change, add, commit’ process, and once you’re done working on your branch: git checkout master, then git merge name_of_that_branch_you_want_to_merge<br /><br /><span className='bold'>> working on a repository with other people</span>:<br />-in the directory you want the project to be in : git clone address_of_repository<br />-git checkout –b name_of_branch (good practice: yourName_nameOfFeatureYouRWorkingOn)<br />-once you’ve added and committed everything you wanted to (good practice: keep commits small and targeted)<br />-git pull origin master to be sure to have the current version of the codebase before you push to the remote repository<br />-if there are conflicts, fix that<br />-git push origin name_of_the_branch_you_wanna_push<br />-go to Github, go to your branch, create pull request, and read the ‘changed files’ to check the before / after code and make sure everything is as you want it to be<br />-assign people to read your code and make comments / approve<br />-work on your code again, taking into accounts comments etc, push again<br />-if everything’s ok, you can merge your branch on Github (then delete the branch on Github and in your local repository : git branch –D name_of_branch) (if you’ve accidentally deleted a branch: when you delete it, there’s a message with a ‘sha’: ‘Deleted branch name_of_branch (was bb670c9)’. To restore it : git branch name_of_branch sha. If you’ve closed or cleared the terminal, you can use git reflog to find this sha).",
  "api": "An API is a set of subroutine definitions, protocols, and tools for building application software. In general terms, it is a set of clearly defined methods of communication between various software components. A good API makes it easier to develop a computer program by providing all the building blocks, which are then put together by the programmer. An API may be for a web-based system, operating system, database system, computer hardware or software library.<br /><br />In short, an API is a software intermediary that allows two applications to talk to each other. Each time you use an app like Facebook, send an instant message, or check the weather on your phone, you’re using an API.<br /><br />APIs provide a layer of security: your phone’s data is never fully exposed to the server, and likewise the server is never fully exposed to your phone. Instead, each communicates with small packets of data, sharing only that which is necessary.<br />APIs have become so valuable that they comprise a large part of many business’ revenue. Major companies like Google, eBay, Salesforce.com, Amazon, and Expedia are just a few of the companies that make money from their APIs.",
  "promise": "A Promise is an object representing the eventual completion or failure of an asynchronous operation. Most people are consumers of already-created promises, but you can also create them. Essentially, a promise is a returned object to which you attach callbacks, instead of passing callbacks into a function.<br /><br />E.g., instead of an old-style function that expects two callbacks, and calls one of them on eventual completion or failure:<br /><br /><span className='codeExample'>function successCallback(result) {<br />--console.log(“It succeeded with “ + result);<br />}<br />function failureCallback(error) {<br />--console.log(“It failed with “ + error);<br />}<br />doSomething(successCallback, failureCallback);</span><br /><br />…modern functions return a promise you can attach your callbacks to instead:<br /><br /><span className='codeExample'>let promise = doSomething();<br />promise.then(successCallback, failureCallback);</span>",
  "endpoint (API endpoint)": "An endpoint is one end of a communication channel. Endpoints are important aspects of interacting with server-side web APIs, as they specify where resources lie that can be accessed by third party software. Usually the access is via a URI to which HTTP requests are posted, and from which the response is thus expected.<br /><br />For example:<br />/this-is-an-endpoint<br />/another/endpoint<br /><br />Also endpoints can be different for different HTTP methods, for example, for an item-listing application:<br />GET /item/{id}<br />PUT /item/{id}<br />would be two different endpoints: the first to retrieve the product that matches the id (the R in CRUD), the second to update the product that matches the id (U in CRUD).",
  "restful api": "A RESTful API is an application program interface (API) that uses HTTP requests to GET, PUT, POST and DELETE data.<br />A RESTful API - also referred to as a RESTful web service - is based on representational state transfer (REST) technology, an architectural style and approach to communications often used in web services development.",
  "rest": "Representation state transfer (REST) or RESTful web services are a way of providing interoperability between computer systems on the Internet.<br />In a RESTful web service, requests made to a resources URI will elicit a response that may be in XML, HTML, JSON or some other defined format. The response may confirm that some alteration has been made to the stored resource, and it may provide hypertext links to other related resources or collections of resources.<br /><br />REST is an architectural style advocating that web application should use HTTP as it was originally envisioned. Lookups should use GET requests. PUT, POST, and DELETE requests should be used for mutation, creation, and deletion respectively.<br />(Keep in mind that GET requests should never be used for updating information. They should be idempotent. That is, issuing a request twice should be no different from issuing it once. That's what makes the requests cacheable. An 'add to cart' request is not idempotent – issuing it twice adds two copies of the item to the cart. A POST request is clearly appropriate in this context).",
  "stateless protocol": "In computing, a stateless protocol is a communications protocol in which no information is retained by either sender or receiver.<br />A stateless protocol does not require the server to retain session information or status about each communicating partner for the duration of multiple requests.<br /><br />An example of a stateless protocol is HTTP, meaning that each request message can be understood in isolation.Contrast this with a traditional FTP server that conducts an interactive session with the user. During the session, a user is provided a means to be authenticated and set various variables (working directory, transfer mode), all stored on the server as part of the user's state.",
  "curl": "cURL is a computer software project providing a library and a command-line tool for transferring data using various protocols. Libcurl is client-side URL transfer library, and cURL is a command line tool for getting or sending files using URL syntax.",
  "convention over configuration": "Convention over configuration (also known as coding by convention) is a software design paradigm used by software frameworks that attempt to decrease the number of decisions that a developer using the framework is required to make without necessarily losing flexibility. The concept was introduced by David Heinemeier Hansson to describe the philosophy of the Ruby on Railsweb framework, but is related to earlier ideas like the concept of 'sensible defaults' and the principle of least astonishment in user interface design.<br />For example, the PHP framework Laravel implements this paradigm.",
  "redis": "Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache and message broker. It supports data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, hyperloglogs and geospatial indexes with radius queries (...) (???)",
  "mongoDB": "MongoDB (from humongous) is a free and open-source cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with schemas.",
  "ports": "In programming, a port is a 'logical connection place' and specifically, using the Internet's protocol, TCP/IP, the way a client program specifies a particular server program on a computer in a network. Higher-level applications that use TCP/IP such as the Web protocol, Hypertext Transfer Protocol, have ports with preassigned numbers. These are known as 'well-known ports' that have been assigned by the Internet Assigned Numbers Authority (IANA). Other application processes are given port numbers dynamically for each connection. When a service (server program) initially is started, it is said to bind to its designated port number. As any client program wants to use that server, it also must request to bind to the designated port number.<br /><br /> Port numbers are from 0 to 65535. Ports 0 to 1024 are reserved for use by certain privileged services. For the HTTP service, port 80 is defined as a default and it does not have to be specified in the Uniform Resource Locator (URL).",
  "protocol buffers": "Google: Protocol buffers are Google's language-neutral, platform-neutral, extensible mechanism for serializing structured data – think XML, but smaller, faster, and simpler. You define how you want your data to be structured once, then you can use special generated source code to easily write and read your structured data to and from a variety of data streams and using a variety of languages.<br/><br/>Wikipedia: protocol Buffers is a method of serializing structured data. It is useful in developing programs to communicate with each other over a wire or for storing data. The method involves an interface description language that describes the structure of some data and a program that generates source code from that description for generating or parsing a stream of bytes that represents the structured data.",
  "react mini-patterns": "Over the last few years, I’ve worked on a handful of decent-sized React projects, and many, many pint-sized ones. Throughout this magical journey, a number of patterns have come up that I find myself repeating again and again...",
  "react router tutorial": "React Router v4 is a pure React rewrite of the popular React package. Previous versions of React Router used configuration disguised as pseudo-components and would be difficult to understand. Now with v4, everything is now “just components”...",
  "presentational and container components": "There’s a simple pattern I find immensely useful when writing React applications. If you’ve been doing React for a while, you have probably already discovered it."
}
